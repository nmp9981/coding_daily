#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n;
int map[50][50];//지도
int visit[50][50];//바꿔야하는 방의 수
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
int inf = 200000000;

void bfs(){
    //맨 처음 지점
    visit[0][0] = 0;
    queue<pair<int,int>> q;
    q.push({0,0});
    
    while(!q.empty()){
        int x = q.front().first;
        int y = q.front().second;
        q.pop();
        
        for(int i=0;i<4;i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            //범위내에 있고
            if(nx>=0 && nx<n && ny>=0 && ny<n){
                //검은방
                if(map[nx][ny]==0){
                    //더 적은 횟수
                    if(visit[nx][ny]>visit[x][y]+1){
                        visit[nx][ny] = visit[x][y]+1;
                        q.push({nx,ny});
                    }
                }else{//흰방
                    if(visit[nx][ny]>visit[x][y]){
                        visit[nx][ny] = visit[x][y];
                        q.push({nx,ny});
                    }
                }
            }
        }
    }
    //출력
    cout<<visit[n-1][n-1];
}

int main(){
    cin.tie(0);
    cout.tie(0);

    //입력
    cin>>n;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%1d",&map[i][j]);
            visit[i][j] = inf;//초기화
        }
    }
    
    bfs();
    return 0;
}
