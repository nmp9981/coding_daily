#include <iostream>
#include <string>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;

int n,m,k;
int map[20][20];
int cnt = 1;
int ans = 1;
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
int alphabet[26];

bool dfs(int x,int y){
  ans = max(ans,cnt);
  
  for(int i=0;i<4;i++){
    int nx = x + dx[i];
    int ny = y + dy[i];

    //범위 밖
    if(nx<0 || nx>=m || ny<0 || ny>=n){
      continue;
    }

    //개수 초기화 변수
    int cnt_point = cnt;

    //겹치는 알파벳이 없으면
    if(alphabet[map[nx][ny]-'A'] == 0){
      alphabet[map[nx][ny]-'A'] = 1;//방문체크
      cnt++;
      dfs(nx,ny);
      //돌아와야함
      alphabet[map[nx][ny]-'A'] = 0;//방문해제
      cnt = cnt_point;
    }
  }
  return true;
}

int main(){
  cin.tie(0);
  cout.tie(0);

  cin>>m>>n;

  //지도 초기화
  string line;
  for(int i=0;i<m;i++){
    cin>>line;
    for(int j=0;j<n;j++){
      map[i][j] = line[j];
    }
  }

  //알파벳 리스트 초기화
  for(int num=0;num<26;num++){
    alphabet[num] = 0;
  }
  
  //처음 1개를 넣고 시작
  alphabet[map[0][0]-'A'] = 1;
  dfs(0,0);

  //출력
  cout<<ans<<endl;
  return 0;
}
