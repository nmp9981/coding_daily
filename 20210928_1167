#include <iostream>
#include <iostream>
#include <string>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int v;
vector<pair<int,int>> map[100001];//그래프
int visit[100001];//각 정점 방문 여부
int diameter = 0;//트리의 지름
int far_node = 0;//가장 먼 노드

//방문기록 초기화
void init_visit(){
    for(int i=1;i<=v;i++){
        visit[i] = 0;
    }
}

//dfs
int dfs(int node, int dist){
    visit[node] = 1;//방문 표시
    
    //최대거리 갱신
    if(diameter<dist){
        diameter = dist;
        far_node = node;
    }
    
    //이웃 노드 탐색
    for(int i=0;i<map[node].size();i++){
        int next = map[node][i].first;
        int nextcost = map[node][i].second;
        //미방문
        if(visit[next]==0){
            dfs(next,nextcost+dist);//재귀
        }
    }
    return diameter;
}

int main(){
    cin.tie(0);
    cout.tie(0);

    //입력
    cin>>v;
    for(int i=0;i<v;i++){
        int a;
        cin>>a;
        while(true){
            int b,d;
            cin>>b;
            if(b==-1){
                break;
            }
            cin>>d;
            map[a].push_back({b,d});
        }
    }
    
    diameter = dfs(1,0);//루트에서 가장 먼 정점
    init_visit();
    diameter = 0;
    diameter = dfs(far_node,0);//트리의 지름
    
    cout<<diameter;//출력
    return 0;
}
