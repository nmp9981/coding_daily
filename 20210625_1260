import sys 
input = sys.stdin.readline 
from collections import deque

#입력
n, m, v = map(int, input().split())
#인접행렬생성
matrix = [[0]*(n+1) for i in range(n+1)]
for i in range(m):
  from_n, to_n = map(int, input().split())
  matrix[from_n][to_n] = matrix[to_n][from_n] = 1

#방문노드
visit = [0 for i in range(n+1)]

#dfs
def dfs(start_node):
  visit[start_node] = 1
  print(start_node, end=' ')
  for i in range(1,n+1):
    if visit[i] == 0 and matrix[start_node][i] == 1:
      dfs(i)

#bfs
def bfs(start_node):
  queue = [start_node]
  visit[start_node] = 1
  while queue:
    start_node = queue.pop(0)
    print(start_node, end = ' ')
    for i in range(1,n+1):
      if visit[i] == 0 and matrix[start_node][i] == 1:
        queue.append(i)
        visit[i] = 1

dfs(v)
print()
visit = [0 for i in range(n+1)] #초기화
bfs(v)
