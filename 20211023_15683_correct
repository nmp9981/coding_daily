#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
vector<vector<int>> map(8,vector<int>(8,0));//지도원본
vector<pair<int,pair<int,int>>> camera;//카메라 번호,위치
int cctv_cnt = 0;//카메라 대수
int ans = 65;//사각지대의 개수

//입력
void input(){
    cin>>n>>m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%d",&map[i][j]);
            //카메라면
            if(map[i][j]>=1 && map[i][j]<=5){
                camera.push_back({map[i][j],{i,j}});//카메라 번호,위치
                cctv_cnt++;//카메라 수 증가
            } 
        }
    }
}

//사각지대 탐색
int area(){
    int area_cnt = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(map[i][j]==0){//사각지대이면
                area_cnt++;
            }
        }
    }
    ans = min(area_cnt,ans);
    return ans;
}

//감시영역표시
void move(int dir,int x,int y){//행,열
    switch(dir){
        //북
        case 0:
            for(int i=x-1;i>=0;i--){
                if(map[i][y]==6){//벽 도달
                    break;
                }
                if(map[i][y]==0){
                    map[i][y] = 7;//사각지대 없애기
                }
            }
            break;
        //동
        case 1:
            for(int j=y+1;j<m;j++){
                if(map[x][j]==6){//벽 도달
                    break;
                }
                if(map[x][j]==0){
                    map[x][j] = 7;//사각지대 없애기
                }
            }
            break;
        //남
        case 2:
            for(int i=x+1;i<n;i++){
                if(map[i][y]==6){//벽 도달
                    break;
                }
                if(map[i][y]==0){
                    map[i][y] = 7;//사각지대 없애기
                }
            }
            break;
        //서
        case 3:
            for(int j=y-1;j>=0;j--){
                if(map[x][j]==6){//벽 도달
                    break;
                }
                if(map[x][j]==0){
                    map[x][j] = 7;//사각지대 없애기
                }
            }
            break;
    }
}

//카메라탐색
void dfs(int num){//카메라 대수를 인자로
    //카메라를 모두 탐색
    if(num == cctv_cnt){
        area();
        return;
    }
    
    int cctv = camera[num].first;//cctv번호
    int x = camera[num].second.first;
    int y = camera[num].second.second;
    
    vector<vector<int>> map_copy = map;//이전상태맵 저장
    
    switch(cctv){
        //북,동,남,서
        case 1:
            for(int dir=0;dir<4;dir++){
                move(dir,x,y);//이동
                dfs(num+1);//다음 카메라로
                map = map_copy;//맵 갱신
            }
            break;
        case 2:
            for(int dir=0;dir<2;dir++){
                move(dir,x,y);//이동
                move(dir+2,x,y);//이동
                dfs(num+1);//다음 카메라로
                map = map_copy;//맵 갱신
            }
            break;
        case 3:
            for(int dir=0;dir<4;dir++){
                move(dir,x,y);//이동
                move((dir+1)%4,x,y);//이동
                dfs(num+1);//다음 카메라로
                map = map_copy;//맵 갱신
            }
            break;
        case 4:
            for(int dir=0;dir<4;dir++){
                move(dir,x,y);//이동
                move((dir+1)%4,x,y);//이동
                move((dir+2)%4,x,y);//이동
                dfs(num+1);//다음 카메라로
                map = map_copy;//맵 갱신
            }
            break;
        case 5:
            move(0,x,y);//이동
            move(1,x,y);//이동
            move(2,x,y);//이동
            move(3,x,y);//이동
            dfs(num+1);//다음 카메라로
            map = map_copy;//맵 갱신
            break;
    }
}

int main(){
    cin.tie(0);
    cout.tie(0);

    input();
    dfs(0);//카메라 탐색
    cout<<ans;
    return 0;
}
