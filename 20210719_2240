#입력
n,m = map(int, input().split())
li = [0]
for i in range(n):
	x = int(input())
	li.append(x)

#2차원 dp
dp = [[0]*(m+1) for i in range(n+1)]
not_move = 0
for i in range(1,n+1):
	#움직이지 않음
	if li[i] == 1:
		not_move += 1
		dp[i][0] = not_move
	for k in range(1, m+1):
		#자두를 먹음
		#1번에서 먹음
		if k%2 == 0 and li[i] == 1:
			#이전에 움직이는가? 여부
			dp[i][k] = max(dp[i-1][k], dp[i-1][k-1]) +1
		#2번에서 먹음
		elif k%2 == 1 and li[i] == 2:
			dp[i][k] = max(dp[i-1][k], dp[i-1][k-1]) +1
		#자두를 먹지 않음
		else: #이동 여부만
			dp[i][k] = max(dp[i-1][k], dp[i-1][k-1])

#출력
print(max(dp[n])) 
