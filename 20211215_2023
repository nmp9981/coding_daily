#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <utility>
#include <set>

using namespace std;//이름공간 선언

int n;
const int maxi = 9000;
bool is_prime[maxi];//소수여부
vector<int> prime;//소수 목록

//9000까지의 소수 구하기
void eratos(){
    memset(is_prime,true,sizeof(is_prime));//초기화
    int root_maxi = ceil(pow(maxi,0.5));
    for(int i=3;i<root_maxi;i+=2){
        if(is_prime[i]==true){//소수이면
            for(int j=i*i;j<maxi;j+=i){
                is_prime[j] = false;//소수가 아님
            }
        }
    }
    //소수를 넣기
    for(int i=3;i<maxi;i+=2){
        if(is_prime[i]==true){
            prime.push_back(i);
        }
    }
}

//소수 인가?
bool judge_prime(int y){
    for(int j=0;j<prime.size();j++){
        if(prime[j]<y && y%prime[j]==0){
            return false;//소수가 아님
        }
    }
    return true;//소수이다.
}

//신기한 소수 구하기
void fantasty(int x,int idx){
    //목표 자릿수 도달
    if(idx==n){
        cout<<x<<"\n";
        return;
    }
    
    //다음 자릿수 구하기
    int next_num[4] = {1,3,7,9};
    for(int i : next_num){
        int next = 10*x+i;
        //소수일 경우에만 다음으로 넘어가 재귀함
        if(judge_prime(next)==true){
            fantasty(next,idx+1);
        }
    }
}
int main(){
    //빠른 입출력
    cin.tie(0);
    cout.tie(0);

    cin>>n;
    eratos();//9000까지의 소수 구하기
    //신기한 소수 출력하기
    int first[4] = {2,3,5,7};//첫번째 자리에 올 수 있는수
    for(int st : first){
        fantasty(st,1);//시작하는수, 자릿수
    }
    return 0;
}
