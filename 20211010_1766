#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
int node[32001];//진입노드
vector<int> tree[32001];//트리

//위상정렬+최소힙
void bfs(){
    //작은수가 먼저 와야하므로 최소힙
    priority_queue<int,vector<int>,greater<int>> pq;
    //진입노드가 0인것을 모두 큐에 넣기
    for(int i=1;i<=n;i++){
        if(node[i]==0){
            pq.push(i);
        }
    }
    
    while(!pq.empty()){
        int x = pq.top();//현재노드
        pq.pop();
        cout<<x<<" ";//출력
        
        //이웃탐색
        for(int i=0;i<tree[x].size();i++){
            int next = tree[x][i];//다음지점
            node[next]-=1;//간선제거
            if(node[next]==0){//새로운 노드
                pq.push(next);
            }
        }
    }
}

//입력
void input(){
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        tree[a].push_back(b);//a->b
        node[b]+=1;//진입노드 증가
    }
}

int main(){
    cin.tie(0);
    cout.tie(0);
    input();//입력
    bfs();
    return 0;
}
