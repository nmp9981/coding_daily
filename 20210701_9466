import sys 
sys.setrecursionlimit(999999) #재귀깊이 늘려줌(dps시 참고)

#dfs
def dfs(x):
  global team
  visit[x] = 1 #방문했음
  cycle.append(x) #방문경로 저장
  
  w = p[x] #다음 방문 정점
  if visit[w] == 1: #이미 방문
    if w in cycle: #다음 방문지점이 존재
      team += cycle[cycle.index(w):] #사이클이 되는 구간부터만 팀을 이룸
  else: #아직 방문 안함
    dfs(w)

#입력
t = int(input())
for i in range(t):
  n = int(input())
  p = [0] + list(map(int, input().split())) #리스트는 0번부터 시작
  visit = [0]*(n+1) #방문 정점 수
  team = [] #팀을 구한 학생수
  for i in range(1,n+1):
    if visit[i] == 0: #아직 방문을 안했다면
      cycle = [] #순환리스트
      dfs(i)
  
  #출력
  print(n-len(team))
