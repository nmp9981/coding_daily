#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <utility>
#include <set>

using namespace std;//이름공간 선언

int n,m;
const int maxi = 1010000;
int check_prime[maxi];//소수여부
vector<int> prime;//소수 리스트

//입력
void input(){
	cin>>n;
}

//에라토스테네스의 체
void eratos(){
    memset(check_prime,0,sizeof(check_prime));//초기화
    //에라토스테네스의 체
    int root_maxi = pow(maxi,0.5);
    for(int i=3;i<root_maxi;i+=2){
        if(check_prime[i]==0){//소수라면
            for(int j=i*i;j<maxi;j+=i){//i*i이상의 i의 배수는 소수가 아님
                check_prime[j] = 1;//소수가 아님
            }
        }
    }
    
    //소수 리스트넣기
    prime.push_back(2);//2도 소수
    for(int i=3;i<maxi;i+=2){
        if(check_prime[i]==0){
            prime.push_back(i);
        }
    }
}

//팰린드롬 구하기
void palindrome(){
    for(int i=0;i<prime.size();i++){
        string p = to_string(prime[i]);
        //팰린드롬 판단
        bool flag = true;//팰린드롬인가?
        for(int j=0;j<p.size()/2;j++){
            if(p[j]!=p[p.size()-j-1]){
                flag = false;//팰린드롬이 아님
                break;
            }
        }
        //팰린드롬이고 n이상이면
        if(flag == true && prime[i]>=n){
            cout<<prime[i];
            return;
        }
    }
}

int main(){
    //빠른 입출력
    ios::sync_with_stdio(false);
    
    input();//입력
    eratos();//에라토스테네스의 체
    palindrome();//팰린드롬 구하기
    return 0;
}
