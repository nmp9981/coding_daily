#바이토닉 수열, LIS사용
def bito(li,n):
  #리스트 생성
  p = [1 for i in range(n)]
  m = [1 for i in range(n)]
  #리스트 뒤집기(역으로 정렬 후 계산)
  mi = li[::-1]
  for i in range(1,n):
    for j in range(0,i):
      if li[i] > li[j]:#오름차순
        p[i] = max(p[i], p[j]+1)
      if mi[i] > mi[j]:#내림차순(오름차순으로 구한 후 다시 역으로)
        m[i] = max(m[i], m[j]+1)
  #출력
  result = [1 for i in range(n)]
  for i in range(0,n):
    result[i] = p[i] + m[n-i-1] - 1#자기자신 제외, m은 오름차순으로 계산했으므로 다시 원래위치로
  print(max(result))
#입력
n = int(input())
li = list(map(int, input().split()))
bito(li,n)
