#include <iostream>
#include <string>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;

int map[301][301];
int n;
int goalx,goaly;
int dx[] = {-1,-1,1,1,-2,-2,2,2};
int dy[] = {-2,2,-2,2,-1,1,-1,1};
queue<pair<int,int>> q;

void bfs(){
  while(!q.empty()){
    //현재 위치
    int x = q.front().first;
    int y = q.front().second;
    q.pop();

    //목표 도달
    if(x==goalx && y==goaly){
      cout<<map[x][y]<<"\n";
      break;
    }

    for(int i=0;i<8;i++){
      int nx = x + dx[i];
      int ny = y + dy[i];

      //범위내에 있고, 미방문이면
      if(nx>=0 && nx<n && ny>=0 && ny<n){
        if(map[nx][ny]==0){
          q.push(make_pair(nx,ny));
          map[nx][ny] = map[x][y] + 1;
        }
      }
    }
  }
}
int main(){
  cin.tie(0);
  cout.tie(0);

  //입력
  int t;
  cin>>t;
  for(int test=0;test<t;test++){
    cin>>n;
    //초기화
    for(int i=0;i<n;i++){
      for(int j=0;j<n;j++){
        map[i][j] = 0;
      }
    }

    //큐 초기화
    while(!q.empty()){
      q.pop();
    }

    int startx,starty;
    cin>>startx>>starty;
    cin>>goalx>>goaly;

    q.push(make_pair(startx,starty));
    bfs();
  }
  return 0;
}
