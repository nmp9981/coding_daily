#include <iostream>
#include <iostream>
#include <string>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
int visit[1000][1000][2];//경로표시
int map[1000][1000];//맵 원본
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
queue<pair<pair<int,int>,int>> q;

void bfs(){
    while(!q.empty()){
        //현재좌표
        int x = q.front().first.first;
        int y = q.front().first.second;
        int block = q.front().second;//남은 횟수
        q.pop();
        
        //목표도달
        if(x==n-1 && y==m-1){
            cout<<visit[x][y][block]<<"\n";
            return;
        }
        
        //4방향탐색
        for(int i=0;i<4;i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            //범위내에 있고
            if(nx>=0 && nx<n && ny>=0 && ny<m){
                //벽뚫고 이동,미방문
                if(map[nx][ny]==1 && block>0 && visit[nx][ny][block-1]==0){
                    visit[nx][ny][block-1] = visit[x][y][block] + 1;
                    q.push({{nx,ny},block-1});
                }
                //그냥이동,미방문
                if(map[nx][ny]==0 && visit[nx][ny][block]==0){
                    visit[nx][ny][block] = visit[x][y][block]+1;
                    q.push({{nx,ny},block});
                }
            }
        }
        
    }
    //불가능함
    cout<<"-1";
}
int main()
{
    //입력
    cin>>n>>m;
    //지도생성
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%1d",&map[i][j]);
        }
    }
    //맨처음 1개는 미리넣기
    visit[0][0][1] = 1;
    q.push({{0,0},1});
    bfs();

    return 0;
}
