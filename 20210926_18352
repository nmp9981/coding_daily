#include <iostream>
#include <iostream>
#include <string>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m,k,x;
vector<int> map[300001];//그래프
int visit[300001];//각 정점방문 여부
int inf = 100000000;//초기화 값
queue<pair<int,int>> q;
vector<int> city;//도시 목록

//bfs
void bfs(int start){
    while(!q.empty()){
        int dist = q.front().first;//거리
        int node = q.front().second;//노드
        q.pop();
        
        //목표거리 도달
        if(dist == k){
            city.push_back(node);
        }
        
        //이웃탐색
        for(int i=0;i<map[node].size();i++){
            int next_node = map[node][i];
            //미방문이면
            if(visit[next_node]==0){
                visit[next_node] = 1;//방문 표시
                q.push({dist+1,next_node});//다음 지점까지의 거리, 다음노드
                //모든 간선의 거리는 1
            }
        }
    }
}

int main()
{
    cin.tie(0);
    cout.tie(0);

    //입력
    cin>>n>>m>>k>>x;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        map[a].push_back(b);//단방향 그래프
    }
    
    //x부터 출발
    q.push({0,x});//거리,노드
    visit[x] = 1;//방문 표시
    bfs(x);
    
    //결과
    if(city.size()==0){
        cout<<-1;
    }else{
        sort(city.begin(),city.end());
        for(int i=0;i<city.size();i++){
            cout<<city[i]<<"\n";
        }
    }
    return 0;
}
