#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <queue>
using namespace std;

int n,m;
const int maxi = 2001;
vector<int> v[maxi];
int visit[maxi];//방문체크
int flag = 0;//존재하는가?

//입력
void input(){
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        v[a].push_back(b);
        v[b].push_back(a);
    }
}

//깊이 4이상인 노드가 존재하는가?
void dfs(int node,int depth){
    visit[node] = 1;//방문체크
    //깊이가 4인 노드 존재
    if(depth==4){
        flag = 1;
        return;
    }
    //다음지점탐색
    for(int j=0;j<v[node].size();j++){
        int next = v[node][j];
        //미방문이면 재귀
        if(visit[next]==0){
            dfs(next,depth+1);
        }
    }
    visit[node] = 0;//이전지점으로 돌아감
}

int main(){
    input();//입력
    for(int i=0;i<n;i++){
        memset(visit,0,sizeof(visit));//초기화
        dfs(i,0);//노드, 깊이
    }
    cout<<flag;
    return 0;
}
