import sys 
sys.setrecursionlimit(10**6) #재귀깊이 늘려줌(dps시 참고)
from collections import deque

#입력
n = int(input())

#지도 입력
matrix = []
for i in range(n):
  from_n = list(map(int, input()))
  matrix.append(from_n)

#방향
dx = [0,0,1,-1]
dy = [1,-1,0,0]

#dfs
def dfs(x,y):
  global count
  #탐색범위 벗어난 경우
  if x < 0 or x >= n or y < 0 or y >= n:
    return False

  if matrix[x][y] == 1: #단지 1-> 0
    count += 1
    matrix[x][y] = 0
    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]
      dfs(nx,ny)
    return True

grp = [] #연결 단지 리스트
count = 0

#탐색
for i in range(n):
  for j in range(n):
    if dfs(i,j) == True:
      grp.append(count)
      count = 0 #초기화

#출력
print(len(grp))
grp.sort()
for i in grp:
  print(i)
