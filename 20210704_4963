import sys 
sys.setrecursionlimit(10**6) #재귀깊이 늘려줌(dps시 참고)
from collections import deque
#dfs
def dfs(x,y):
  #탐색범위
  if x < 0 or x >= h or y < 0 or y >= w:
    return False

  if matrix[x][y] == 1: #1->0
    matrix[x][y] = 0
    for i in range(8): #8방향 탐색
      nx = x + dx[i]
      ny = y + dy[i]
      dfs(nx,ny)
  return True

#8방향 변수
dx = [0,0,-1,1,-1,-1,1,1]
dy = [-1,1,0,0,-1,1,-1,1]

#입력
while True:
  w,h = map(int, input().split())

  #종료
  if w == 0 and h == 0:
    break
    
  #지도 입력
  matrix = []
  for i in range(h):
    li = list(map(int, input().split()))
    matrix.append(li)
  
  #지도 순회
  count = 0 #섬의 개수
  for i in range(h):
    for j in range(w):
      if matrix[i][j] == 1:
        dfs(i,j)
        count += 1
  
  #출력
  print(count)
